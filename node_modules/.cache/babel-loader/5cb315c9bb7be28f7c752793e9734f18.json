{"ast":null,"code":"import _slicedToArray from\"/home/naama/thomas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import GridList from\"@material-ui/core/GridList\";import GridListTile from\"@material-ui/core/GridListTile\";import GridListTileBar from\"@material-ui/core/GridListTileBar\";import IconButton from\"@material-ui/core/IconButton\";import ZoomInIcon from'@material-ui/icons/ZoomIn';import Images from\"./images\";import Typography from'@material-ui/core/Typography';import Dialog from\"@material-ui/core/Dialog\";import CloseIcon from\"@material-ui/icons/Close\";import Slide from\"@material-ui/core/Slide\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"space-around\",overflow:\"hidden\"},gridList:{width:\"auto\",textAlign:\"left\"},icon:{color:\"rgba(255, 255, 255, 0.54)\"},Dialog:{width:\"70%\"},selectedTile:{width:\"100%\",height:\"auto\"}};});var Transition=React.forwardRef(function Transition(props,ref){return/*#__PURE__*/React.createElement(Slide,Object.assign({direction:\"up\",ref:ref},props));});export default function TitlebarGridList(){var classes=useStyles();var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),selectedTile=_React$useState2[0],setSelectedTile=_React$useState2[1];var handleDouble=function handleDouble(tile){tile.oncontextmenu=function(e){e.preventDefault();};};var handleClickOpen=function handleClickOpen(tile){setSelectedTile(tile);};var handleClose=function handleClose(){setSelectedTile(null);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(GridList,{cols:3},\"className=\",classes.gridList,Images.map(function(tile){return/*#__PURE__*/React.createElement(GridListTile,{key:tile.id},/*#__PURE__*/React.createElement(\"img\",{src:tile.src,alt:tile.title}),/*#__PURE__*/React.createElement(GridListTileBar,{onClick:function onClick(){return handleDouble(tile);},title:tile.title,actionIcon:/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"info about \".concat(tile.title),className:classes.icon,value:tile.id,onClick:function onClick(){return handleClickOpen(tile);}},/*#__PURE__*/React.createElement(ZoomInIcon,null))}));})),/*#__PURE__*/React.createElement(Dialog,{open:selectedTile!==null,onClose:handleClose,TransitionComponent:Transition},selectedTile&&/*#__PURE__*/React.createElement(\"img\",{src:selectedTile.src,alt:selectedTile.title,className:classes.selectedTile,body:selectedTile.body})));}","map":{"version":3,"sources":["/home/naama/thomas/src/components/img.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","ZoomInIcon","Images","Typography","Dialog","CloseIcon","Slide","useStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","textAlign","icon","color","selectedTile","height","Transition","forwardRef","props","ref","TitlebarGridList","classes","useState","setSelectedTile","handleDouble","tile","oncontextmenu","e","preventDefault","handleClickOpen","handleClose","map","id","src","title","body"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport Images from \"./images\";\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from \"@material-ui/core/Dialog\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  },\n  gridList: {\n   width:\"auto\",\n   textAlign:\"left\"\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  },\n  Dialog:{\n width: \"70%\"\n  },\n  selectedTile:{\n    width: \"100%\",\n    height:\"auto\"\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n  const [selectedTile, setSelectedTile] = React.useState(null);\n  const handleDouble = tile =>{\n    tile.oncontextmenu = function (e) {\n      e.preventDefault();\n  };\n  }\n\n  const handleClickOpen = tile => {\n    setSelectedTile(tile);\n  };\n\n  const handleClose = () => {\n    setSelectedTile(null);\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <GridList cols={3}>\n        className={classes.gridList}\n        {Images.map(tile => (\n          <GridListTile key={tile.id}  >\n            <img src={tile.src} alt={tile.title}/>\n            <GridListTileBar\n            onClick={()=> handleDouble(tile)}\n            title={tile.title}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                  value={tile.id}\n                  onClick={() => handleClickOpen(tile)}\n                >\n                  <ZoomInIcon />\n                  \n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <Dialog\n        open={selectedTile !== null}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n         >\n\n        {selectedTile && (\n          <img src={selectedTile.src} alt={selectedTile.title} className={classes.selectedTile} body={selectedTile.body}/>\n        \n        )}\n   \n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}